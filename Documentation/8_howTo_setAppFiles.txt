set_app_files.ps1

set_app_files.ps1 is a tiny PowerShell script the converter I gave you (convert_and_export.py) generates automatically. It just sets two environment variables to the PDFs it created, so the apply helper can find them.

Who wrote it? The Python script I shared writes it for you (so: generated by that script).

What’s inside? Something like:

$env:RESUME_FILE = "C:\path\to\resume.pdf"
$env:COVER_FILE  = "C:\path\to\cover.pdf"
Write-Host "RESUME_FILE=$env:RESUME_FILE"
Write-Host "COVER_FILE=$env:COVER_FILE"


How to use it (current terminal only):

. .\set_app_files.ps1     # note the leading dot + space = “dot-source”
$env:RESUME_FILE          # verify
$env:COVER_FILE


(If PowerShell blocks scripts, run once:
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned)

Why it exists: It saves you from typing long paths every time. apply_assist.py checks RESUME_FILE/COVER_FILE and uploads those.

Where it lives: In your project root, next to convert_and_export.py. Re-running the converter updates/overwrites it when PDFs change.

Don’t want it? You can:

Set vars manually:

$env:RESUME_FILE = "C:\...\resume.pdf"
$env:COVER_FILE  = "C:\...\cover.pdf"


Or make them permanent for new terminals:

setx RESUME_FILE "C:\...\resume.pdf"
setx COVER_FILE  "C:\...\cover.pdf"


(Restart terminal to see them.)

Also written: the script drops a .env file with the same paths. If you prefer, you can load that in Python with python-dotenv instead of using PowerShell env vars.

If you’d rather I change convert_and_export.py to print the two export lines instead of writing set_app_files.ps1, say the word and I’ll tweak it.